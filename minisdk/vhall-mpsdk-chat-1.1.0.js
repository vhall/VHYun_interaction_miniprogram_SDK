module.exports=function(e){var t={};function s(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,s),i.l=!0,i.exports}return s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)s.d(n,i,function(t){return e[t]}.bind(null,i));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=2)}({2:function(e,t,s){"use strict";s.r(t),s.d(t,"default",(function(){return d}));const n={EVENT_CHAT:"EVENT_CHAT",EVENT_CUSTOM:"EVENT_CUSTOM",EVENT_JOIN:"EVENT_JOIN",EVENT_LEAVE:"EVENT_LEAVE",EVENT_ERROR:"EVENT_ERROR",EVENT_CLOSE:"EVENT_CLOSE",CONNECTFAIL:"CONNECTFAIL",RECONNECTING:"RECONNECTING",RECONNECTED:"RECONNECTED",RECONNECTFAIL:"RECONNECTFAIL"},i={TYPE_TEXT:"text",TYPE_DISABLE:"disable",TYPE_DISABLE_ALL:"disable_all",TYPE_PERMIT:"permit",TYPE_PERMIT_ALL:"permit_all"},o="/v2/message/set-channel",c="/v2/message/get-userid-list",r="/v2/message/lists",a={im:()=>{},custom:()=>{},document:()=>{},room:()=>{},Join:()=>{},Leave:()=>{}};class h extends class{constructor(){this.dispatcher={eventListeners:{}}}on(e,t){void 0===this.dispatcher.eventListeners[e]&&(this.dispatcher.eventListeners[e]=[]),this.dispatcher.eventListeners[e].push(t)}off(e,t){if(!this.dispatcher.eventListeners[e])return;const s=this.dispatcher.eventListeners[e].indexOf(t);-1!==s&&this.dispatcher.eventListeners[e].splice(s,1)}emit(e,t={}){if(!e)throw new Error("Undefined event");const s=this.dispatcher.eventListeners[e]||[];for(let e=0;e<s.length;e+=1)s[e](t)}has(e){return!!Object.keys(this.dispatcher.eventListeners).includes(e)}}{constructor({VhallChat:e,vhallBase:t,channelId:s,accountId:i,context:o,hide:c}){super(),this.VhallChat=e,this.socket=t,this.channelId=s,this.accountId=i,this.context=o,this.hide=c,this.getOnlineInfo=this.getOnlineInfo.bind(this),this.socket.on("service_im",e=>{if(e.channel!=this.channelId)return;let t=JSON.parse(e.data),s=t.text_content,i={};try{i=JSON.parse(e.context),void 0!==i.nick_name&&void 0!==i.avatar||void 0===t.nick_name||void 0===t.avatar||(i.nick_name=t.nick_name,i.avatar=t.avatar)}catch(e){}this.emit(n.EVENT_CHAT,{type:t.type,text_content:s,data:s,user_id:e.sender_id,target_id:t.target_id,context:i,msgId:e.msg_id,date_time:e.date_time})}),this.socket.on("service_custom",e=>{let t={};try{t=JSON.parse(e.context)}catch(e){}this.emit(n.EVENT_CUSTOM,{text_content:e.data,data:e.data,user_id:e.sender_id,context:t,msgId:e.msg_id,date_time:e.date_time})}),this.socket.on("service_room",e=>{a.room&&a.room(e)}),this.socket.on("service_online",e=>{if(e.channel==this.channelId)switch(JSON.parse(e.data).type){case"Join":{let t="";try{t=JSON.parse(e.context)}catch(e){}this.emit(n.EVENT_JOIN,{user_id:e.sender_id,date_time:e.date_time,context:t});break}case"Leave":if(this.accountId==e.sender_id)return;this.emit(n.EVENT_LEAVE,{user_id:e.sender_id,date_time:e.date_time})}}),this.socket.on("onClose",e=>{this.checkMsg(e)&&this.emit(n.EVENT_CLOSE,e)}),this.socket.on("onTaskError",e=>{this.checkMsg(e)&&this.emit(n.EVENT_ERROR,e)}),this.socket.on("connectFail",e=>{this.checkMsg(e)&&this.emit(n.CONNECTFAIL,e)}),this.socket.on("allSocket",e=>{this.checkMsg(e)&&this.emit("allSocket",e)}),this.socket.on("reConnecting",e=>{this.checkMsg(e)&&this.emit(n.RECONNECTING)}),this.socket.on("reConnected",e=>{this.checkMsg(e)&&this.emit(n.RECONNECTED)}),this.socket.on("reConnectFail",e=>{this.checkMsg(e)&&this.emit(n.RECONNECTFAIL)})}onChat(e){this.on(n.EVENT_CHAT,e)}onCustom(e){this.on(n.EVENT_CUSTOM,e)}onRoomMsg(e){a.room=e}onJoin(e){this.on(n.EVENT_JOIN,e)}onLeave(e){this.on(n.EVENT_LEAVE,e)}connectFail(e){this.on("connectFail",e)}onClose(e){this.on(n.EVENT_CLOSE,e)}onTaskError(e){this.on(n.EVENT_ERROR,e)}reConnecting(e){this.on("reConnecting",e)}reConnected(e){this.on("reConnected",e)}reConnectFail(e){this.on("reConnectFail",e)}allSocket(e){this.on("allSocket",e)}emitChat(e,t=(()=>{}),s=(()=>{})){return new Promise((n,i)=>{const{data:o,context:c={},inspection:r=!0}=e;if(!e.hasOwnProperty("data")||"string"!=typeof o)return s&&s({code:"",message:"无效的参数",data:{}}),void i({code:"",message:"无效的参数",data:{}});const a={type:"text",text_content:o,channelId:this.channelId};this.socket.sendHttpMsg("service_im",a,c,Number(!r)||0).then(e=>{n(e),t(e)}).catch(e=>{i(e),s(e)})})}emitCustom(e){return new Promise((t,s)=>{this.socket.sendHttpMsg("service_custom",e).then(()=>{t()}).catch(e=>{s(e)})})}emitRoomMsg(e){let t=JSON.parse(e);!t.hasOwnProperty("type")||"live_start"!==t.type&&"live_over"!==t.type||(t.room=this.channelId),this.socket.sendHttpMsg("service_room",e)}getOnlineInfo({currPage:e=0,pageSize:t=0},s=(()=>{}),n=(()=>{})){return new Promise((i,o)=>{const r={channel_id:this.channelId,curr_page:e,page_size:t};this.socket.request(c,r,e=>{s(e),i(e)},e=>{n(e),o(e)})})}getUserListInfo(e,t=(()=>{}),s=(()=>{})){this.getOnlineInfo(e,t,s)}setDisable(e,t=(()=>{}),s=(()=>{})){return new Promise((n,i)=>{const c={channel_id:this.channelId,type:e.type,target_id:e.target_id};this.socket.request(o,c,e=>{t(e),n(e)},e=>{s(e),i(e)})})}getHistoryList(e={},t=(()=>{}),s=(()=>{})){return new Promise((n,i)=>{const o={channel_id:this.channelId,curr_page:e.currPage,page_size:e.pageSize,filter_status:0,start_time:e.startTime,end_time:e.endTime};this.socket.request(r,o,e=>{t(e),n(e)},e=>{s(e),i(e)})})}checkMsg(e){const t=this.socket.socketName;return e.socketName==t.CHAT}destroyInstance(){const e=this.socket.socketName;this.socket.leave(e.CHAT,{third_party_user_id:this.accountId,channelId:this.channelId}),this.socket.close(),this.socket=null}initiativeReconnect(){const e=this.socket.socketName;return this.socket.join(e.CHAT,{third_party_user_id:this.accountId,context:this.context,hide:this.hide,channelId:this.channelId}),Promise.resolve()}}class d{constructor(){for(let e in i)this[e]=i[e];for(const e in n)n.hasOwnProperty(e)&&(this[e]=n[e]);this.interface=null}async createInstance(e,t=(()=>{}),s=(()=>{})){const{appId:n,channelId:i,accountId:o,token:c,vhallBase:r,context:a={},hide:d=!1}=e;if("string"!=typeof n)return s({code:"",message:"appId must be a string",data:{}}),Promise.reject({code:201,msg:"appId must be a string"});if("string"!=typeof i)return s({code:"",message:"channelId must be a string",data:{}}),Promise.reject({code:201,msg:"channelId must be a string"});if("string"!=typeof o)return s({code:"",message:"accountId must be a string",data:{}}),Promise.reject({code:201,msg:"accountId must be a string"});if("string"!=typeof c)return s({code:"",message:"token must be a string",data:{}}),Promise.reject({code:201,msg:"token must be a string"});if("[object Object]"!=Object.prototype.toString.call(r))return s({code:"",message:"vhallBase must be a object",data:{}}),Promise.reject({code:201,msg:"vhallBase must be a object"});const l=r.socketName;if(!r.collect.has(l.CHAT)){try{await r.connectSocketIo({})}catch(e){return console.warn(e),Promise.reject({code:"",message:"connect socket fail"})}try{await r.addChannel(i)}catch(e){return console.warn(e),Promise.reject({code:"",message:"connect pushStream fail"})}}return await this.delay(),r.join(l.CHAT,{third_party_user_id:o,context:a,hide:d,channelId:i}),new Promise(e=>{r.on("joined",s=>{let n={VhallChat:this,vhallBase:r,channelId:i,accountId:o,context:a,hide:d};this.interface=new h(n);let c={message:this.interface,disable:s.data.disable_users.includes(o),disable_all:Boolean(s.data.channel_disable)};t(c),e(c)})})}async initiativeReconnect(){return await this.delay(),this.interface.initiativeReconnect()}destroy(){this.interface&&this.interface.destroyInstance()}delay(e=1e3){return new Promise(t=>{let s=setTimeout(()=>{t(),clearTimeout(s)},e)})}}}});